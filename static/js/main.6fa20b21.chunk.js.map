{"version":3,"sources":["services/local/sign-in-service.js","core/StorageProcessor.js","core/AuthSP.jsx","core/exercice-storage-processor.js","core/StorageProcessorFactory.js","components/common/Alert.jsx","components/common/DismissableAlert.jsx","components/navigation/NavBarLink.jsx","components/navigation/NavBar.jsx","components/navigation/Loading.jsx","components/navigation/SecureRoute.jsx","components/navigation/NavRoutes.jsx","components/Root.jsx","index.jsx"],"names":["SignInService","id","secret","auth","user","console","log","StorageProcessorFactory","getAuthSP","drop","add","foundAuthorised","findAll","length","StorageProcessor","key","this","initLocalStorage","localStorage","getItem","JSON","parse","results","filter","a","undefined","element","list","push","setItem","stringify","AuthSP","ExerciceStorageProcessor","label","toLowerCase","includes","Alert","props","defaultClassName","type","className","role","title","messages","map","msg","i","children","DismissableAlert","data-dismiss","aria-label","aria-hidden","NavBarLink","path","protectedLink","publicLink","publicTitle","logged","getLoggedUser","canShowProtectedLink","canShowPublicLink","canShowCommonLink","Object","assign","to","NavBar","data-toggle","data-target","aria-controls","aria-expanded","defaultTitle","Loading","SecureRoute","publicComponent","othersProps","authorizedUser","renderDefault","component","HomePage","loadable","fallback","AboutPage","AccountPage","ProfilePage","TimePage","AuthPage","NavRoutes","exact","Root","setAuthUser","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6fa20b21.chunk.js","sourcesContent":["import StorageProcessorFactory from \"../../core/StorageProcessorFactory\";\r\n\r\nexport default class SignInService {\r\n  static checkForm({ id, secret }) {\r\n    const fakeSecret = \"C0C044!\";\r\n    const fakeId = \"coco44@coco44.fr\";\r\n    if (id === fakeId && secret === fakeSecret) {\r\n      const auth = {\r\n        user: {\r\n          id: fakeId,\r\n        },\r\n      };\r\n      console.log(\"Connected\");\r\n      // TODO utiliser Redux\r\n      StorageProcessorFactory.getAuthSP().drop();\r\n      StorageProcessorFactory.getAuthSP().add(auth);\r\n      return true;\r\n    }\r\n    console.log(\"Auth fail\");\r\n    return false;\r\n  }\r\n\r\n  static getLoggedUser() {\r\n    // TODO utiliser Redux\r\n    const foundAuthorised = StorageProcessorFactory.getAuthSP().findAll();\r\n    if (foundAuthorised && foundAuthorised.length > 0) {\r\n      return foundAuthorised[0];\r\n    }\r\n    return undefined;\r\n  }\r\n}\r\n","class StorageProcessor {\r\n  constructor(key) {\r\n    this.key = key;\r\n    this.initLocalStorage(this.key);\r\n  }\r\n  /**\r\n   * creating an empty array of Aliment if not exists\r\n   */\r\n  initLocalStorage() {\r\n    if (!localStorage.getItem(this.key)) {\r\n      this.drop();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * retrieving all the aliments form the list\r\n   */\r\n  findAll() {\r\n    return JSON.parse(localStorage.getItem(this.key));\r\n  }\r\n\r\n  findById(id) {\r\n    if (id) {\r\n      const results = this.findAll().filter((a) => a.id === id);\r\n      return results.length > 0 ? results[0] : undefined;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * adding a new aliment to the list\r\n   * @param {Object} aliment\r\n   */\r\n  add(element) {\r\n    let list = this.findAll();\r\n    list.push(element);\r\n    localStorage.setItem(this.key, JSON.stringify(list));\r\n  }\r\n\r\n  count() {\r\n    return this.findAll().length;\r\n  }\r\n\r\n  drop() {\r\n    localStorage.setItem(this.key, JSON.stringify([]));\r\n  }\r\n}\r\n\r\nexport default StorageProcessor;\r\n","import StorageProcessor from \"./StorageProcessor\";\r\n\r\nexport default class AuthSP extends StorageProcessor {}\r\n","import StorageProcessor from \"./StorageProcessor\";\r\n\r\nclass ExerciceStorageProcessor extends StorageProcessor {\r\n  findByName(label) {\r\n    if (label) {\r\n      return super\r\n        .findAll()\r\n        .filter((a) => a.label.toLowerCase().includes(label.toLowerCase()));\r\n    }\r\n    return [];\r\n  }\r\n\r\n  findById(id) {\r\n    if (id) {\r\n      const results = super.findAll().filter((a) => a.id === id);\r\n      return results.length > 0 ? results[0] : undefined;\r\n    }\r\n    return [];\r\n  }\r\n}\r\n\r\nexport default ExerciceStorageProcessor;\r\n","import AuthSP from \"./AuthSP\";\r\nimport ExerciceStorageProcessor from \"./exercice-storage-processor\";\r\n\r\nclass StorageProcessorFactory {\r\n  static getExerciceSP() {\r\n    return new ExerciceStorageProcessor(\"KEY_ALIMENTS\");\r\n  }\r\n\r\n  static getWorkAreaSP() {\r\n    return new ExerciceStorageProcessor(\"KEY_WORK_AREA\");\r\n  }\r\n\r\n  static getAuthSP() {\r\n    return new AuthSP(\"KEY_AUTH\");\r\n  }\r\n}\r\n\r\nexport default StorageProcessorFactory;\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const defaultClassName = \"alert alert-\" + props.type + \" \";\r\n  const className = props.className\r\n    ? defaultClassName + props.className\r\n    : defaultClassName;\r\n  const renderMessages = () => {\r\n    if (props.messages.length > 1) {\r\n      return (\r\n        <ul>\r\n          {props.messages.map((msg, i) => (\r\n            <li key={i}>{msg}</li>\r\n          ))}\r\n        </ul>\r\n      );\r\n    }\r\n    return props.messages[0];\r\n  };\r\n  return (\r\n    <div className={className} role=\"alert\">\r\n      <strong>{props.title}</strong>\r\n      {renderMessages()}\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\nexport default Alert;\r\n","import React from \"react\";\r\nimport Alert from \"./Alert\";\r\n\r\nfunction DismissableAlert(props) {\r\n  return (\r\n    <Alert\r\n      title={props.title}\r\n      messages={props.messages}\r\n      type={props.type}\r\n      className=\"alert-dismissible fade show\"\r\n    >\r\n      <button\r\n        type=\"button\"\r\n        className=\"close\"\r\n        data-dismiss=\"alert\"\r\n        aria-label=\"Close\"\r\n      >\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </Alert>\r\n  );\r\n}\r\nexport default DismissableAlert;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport SignInService from \"../../services/local/sign-in-service\";\r\n\r\nexport default function NavBarLink({\r\n  path,\r\n  title,\r\n  protectedLink = false,\r\n  publicLink = false,\r\n  publicTitle,\r\n}) {\r\n  const logged = SignInService.getLoggedUser();\r\n  console.log(\"link logged\" + logged);\r\n\r\n  // only logged user can't see it\r\n  const canShowProtectedLink = true === logged && true === protectedLink;\r\n  // only not logged user can't see it\r\n  const canShowPublicLink = false === logged && true === publicLink;\r\n  // both logged or not logged user can't see it\r\n  const canShowCommonLink = true === protectedLink && true === publicLink;\r\n\r\n  if (canShowPublicLink && publicTitle) {\r\n    title = Object.assign({}, publicTitle);\r\n  }\r\n  console.log(title);\r\n  if (canShowProtectedLink || canShowPublicLink || canShowCommonLink) {\r\n    return (\r\n      <li className=\"nav-item\">\r\n        <NavLink className=\"nav-link\" to={path}>\r\n          {title}\r\n        </NavLink>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  return null;\r\n}\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport NavBarLink from \"./NavBarLink\";\r\n\r\n// TODO hide link according to the auth status using either redux, recoil, or useReducer\r\nexport default function NavBar() {\r\n  return (\r\n    <nav className=\"navbar sticky-top navbar-expand-lg navbar-dark bg-dark\">\r\n      <NavLink className=\"navbar-brand\" to=\"/\">\r\n        Temps de travail\r\n      </NavLink>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <NavBarLink\r\n            title=\"A propos\"\r\n            path=\"/about\"\r\n            publicLink={true}\r\n            protectedLink={true}\r\n          />\r\n          <NavBarLink title=\"Temps\" path=\"/time\" protectedLink={true} />\r\n          <NavBarLink title=\"Profil\" path=\"/profile\" protectedLink={true} />\r\n          <NavBarLink title=\"Compte\" path=\"/account\" protectedLink={true} />\r\n          <NavBarLink\r\n            title=\"Connexion\"\r\n            path=\"/auth\"\r\n            publicLink={true}\r\n            protectedLink={true}\r\n            defaultTitle=\"Déconnexion\"\r\n          />\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Loading() {\r\n  return <h1>Pending ...</h1>;\r\n}\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport SignInService from \"../../services/local/sign-in-service\";\r\n\r\nexport default function SecureRoute({ publicComponent, ...othersProps }) {\r\n  const authorizedUser = SignInService.getLoggedUser();\r\n  console.log(authorizedUser);\r\n\r\n  const renderDefault = publicComponent ? (\r\n    <Route {...othersProps} component={publicComponent} />\r\n  ) : (\r\n    <Redirect to=\"/auth\" />\r\n  );\r\n\r\n  return authorizedUser ? <Route {...othersProps} /> : renderDefault;\r\n}\r\n","import loadable from \"@loadable/component\";\r\nimport React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Loading from \"./Loading\";\r\nimport SecureRoute from \"./SecureRoute\";\r\n\r\n// TODO use React.lazy instead of @loadable\r\nconst HomePage = loadable(() => import(\"../pages/HomePage\"), {\r\n  fallback: <Loading />,\r\n});\r\n\r\n// TODO use React.lazy instead of @loadable\r\nconst AboutPage = loadable(() => import(\"../pages/AboutPage\"), {\r\n  fallback: <Loading />,\r\n});\r\n\r\n// TODO use React.lazy instead of @loadable\r\nconst AccountPage = loadable(() => import(\"../pages/AccountPage\"), {\r\n  fallback: <Loading />,\r\n});\r\n\r\n// TODO use React.lazy instead of @loadable\r\nconst ProfilePage = loadable(() => import(\"../pages/ProfilePage\"), {\r\n  fallback: <Loading />,\r\n});\r\n\r\n// TODO use React.lazy instead of @loadable\r\nconst TimePage = loadable(() => import(\"../pages/TimePage\"), {\r\n  fallback: <Loading />,\r\n});\r\n\r\n// TODO use React.lazy instead of @loadable\r\nconst AuthPage = loadable(() => import(\"../pages/AuthPage\"), {\r\n  fallback: <Loading />,\r\n});\r\n\r\nexport default function NavRoutes() {\r\n  return (\r\n    <Switch>\r\n      <SecureRoute exact path=\"/profil\" component={ProfilePage} />\r\n      <SecureRoute exact path=\"/time\" component={TimePage} />\r\n      <SecureRoute exact path=\"/compte\" component={AccountPage} />\r\n      <Route exact path=\"/about\" component={AboutPage} />\r\n      <Route exact path=\"/auth\" component={AuthPage} />\r\n      <SecureRoute\r\n        exact\r\n        path=\"/\"\r\n        component={TimePage}\r\n        publicComponent={HomePage}\r\n      />\r\n      <Route path=\"*\" component={() => <p>Vous êtes perdu ?!</p>} />\r\n    </Switch>\r\n  );\r\n}\r\n","// import \"bootswatch/dist/cosmo/bootstrap.min.css\";\r\nimport \"bootswatch/dist/sandstone/bootstrap.min.css\";\r\nimport React from \"react\";\r\nimport SignInService from \"../services/local/sign-in-service\";\r\nimport DismissableAlert from \"./common/DismissableAlert\";\r\nimport NavBar from \"./navigation/NavBar\";\r\nimport NavRoutes from \"./navigation/NavRoutes\";\r\nimport \"./root.css\";\r\n\r\nexport default function Root() {\r\n  // this.secret = \"pump44\";\r\n  // this.idGenerator = new IdGenerator();\r\n  // this.consumptionSP = StorageProcessorFactory.getConsumptionSP();\r\n\r\n  // consumedAliments: this.consumptionSP.findByCurrentIsoDate(),\r\n  // TODO utiliser Redux\r\n  const logged = SignInService.getLoggedUser();\r\n  return (\r\n    <>\r\n      <NavBar logged={logged} />\r\n      <div className=\"container mt-4\">\r\n        <DismissableAlert\r\n          title=\"!!! Attention - Ce site est une version beta.\"\r\n          messages={[\r\n            \"Les données que vous saisissez sont enregistrés dans votre navigateur. Si vous videz le cache elles seront perdues.\",\r\n            \"Aussi, nous vous recommandons d'utiliser le navigateur Google Chrome.\",\r\n          ]}\r\n          type=\"info\"\r\n        />\r\n        <NavRoutes setAuthUser=\"setAuthUser\" />\r\n        {/* TODO Footer bar */}\r\n        <footer>\r\n          <div>\r\n            Icons made by{\" \"}\r\n            <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">\r\n              Freepik\r\n            </a>{\" \"}\r\n            from{\" \"}\r\n            <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\r\n              www.flaticon.com\r\n            </a>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport Root from \"./components/Root\";\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <Root />\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}